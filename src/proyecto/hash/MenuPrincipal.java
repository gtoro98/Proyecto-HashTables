/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto.hash;

import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author SamuelLMiller & Gtoro98
 */
public class MenuPrincipal extends javax.swing.JFrame {
//    Diccionario<String, Keyword> keyWords = new Diccionario<>();
    DiccionarioKey palabrasClave = new DiccionarioKey();
    DiccionarioDoc resumen = new DiccionarioDoc();
    DiccionarioDoc autores = new DiccionarioDoc();
//    Diccionario<String, Documento> resumen = new Diccionario<>();
    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal() {
        initComponents();
        this.setLocationRelativeTo(this);
        this.setResizable(false);
        
        URL path = Main.class.getResource("myFile.txt");
        System.out.println(path.getPath());
        //File f = new File(path.getPath());
  
        //DiccionarioDoc.LeerArchivo(resumen, autores, f);
        
        
        //Agregamos unas palabras clave iniciales
        palabrasClave.agregar("programacion");
        palabrasClave.agregar("circuito");
        palabrasTxt.setText("programacion\ncircuito\n");
        
        this.addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosing(java.awt.event.WindowEvent e) {
            resumen.Guardar();
            //Metodo para guardar las palabras clave y el resumen
            if(!palabrasClave.isEmpty()){
                int close = JOptionPane.showConfirmDialog(null, "Desea guardar antes de cerrar?", "Proyecto Hash", JOptionPane.YES_NO_OPTION);
            
                if(close == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null, "Ubique la direccion para guardar las palabras clave.\n(Coloque .txt al final)", "Guardar Archhivo",
                            JOptionPane.INFORMATION_MESSAGE);
                    JFileChooser chooser = new JFileChooser();
                    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

                    int returnVal = chooser.showSaveDialog(null);

                    if(returnVal == JFileChooser.APPROVE_OPTION){
                        File choice = chooser.getSelectedFile();
                        palabrasClave.guardarPalabrasClave(choice);
                    }
                    
                    //Insertar metodo para guardar docs
                }
                e.getWindow().dispose();
            }
        }
        }); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cargarResBtn = new javax.swing.JButton();
        cargarPBtn = new javax.swing.JButton();
        analizarResBtn = new javax.swing.JButton();
        buscarInBtn = new javax.swing.JButton();
        salirBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        palabrasTxt = new javax.swing.JTextArea();
        label1 = new java.awt.Label();
        jScrollPane3 = new javax.swing.JScrollPane();
        resumenesTxt = new javax.swing.JTextArea();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));

        cargarResBtn.setText("Agregar Resumen");
        cargarResBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarResBtnActionPerformed(evt);
            }
        });

        cargarPBtn.setText("Cargar Palabras Clave");
        cargarPBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarPBtnActionPerformed(evt);
            }
        });

        analizarResBtn.setText("Analizar Resumen");
        analizarResBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizarResBtnActionPerformed(evt);
            }
        });

        buscarInBtn.setText("Buscar Investigaciones");
        buscarInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarInBtnActionPerformed(evt);
            }
        });

        salirBtn.setText("Salir");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cargarPBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cargarResBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(analizarResBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buscarInBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                    .addComponent(salirBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(cargarPBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cargarResBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(analizarResBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buscarInBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(salirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));

        txtArea.setEditable(false);
        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        palabrasTxt.setColumns(20);
        palabrasTxt.setRows(5);
        jScrollPane2.setViewportView(palabrasTxt);

        label1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        label1.setText("Palabras Clave");

        resumenesTxt.setColumns(20);
        resumenesTxt.setRows(5);
        jScrollPane3.setViewportView(resumenesTxt);

        label2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        label2.setText("Resumenes");

        label3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        label3.setText("Datos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(120, 120, 120))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 17, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
   

    private void cargarPBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarPBtnActionPerformed
        String[] opciones = {"Manualmente", "Cargar Archivo"};
        
        String res = (String) JOptionPane.showInputDialog(null, "Seleccione el metodo con el que desea\ningresar las palabras clave", "Cargar Palabras Clave", JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
        
        //Si selecciono el boton cancelar
        if(res == null){
            
        }
        else if (res.equals("Manualmente")){
            //Metodo para agregar la palabra
//            keyWords.escribirPalabra(keyWords);
            palabrasClave.escribirPalabra(palabrasTxt);
        }
        else{
            //Metodo para cargar un archivo y luego agregar las palabras
            JFileChooser file = new JFileChooser();
            int doc = file.showOpenDialog(null);
            if(doc == JFileChooser.APPROVE_OPTION){
                File choice = file.getSelectedFile();
                try {
//                    keyWords.cargarPalabra(choice, keyWords);
                    palabrasClave.cargarPalabra(choice, palabrasTxt);
                } catch (IOException ex) {
                    Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        }
    }//GEN-LAST:event_cargarPBtnActionPerformed

    private void cargarResBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarResBtnActionPerformed

        JFileChooser file = new JFileChooser();
        int doc = file.showOpenDialog(null);
        if(doc == JFileChooser.APPROVE_OPTION) {
            File choice = file.getSelectedFile();
            resumen.LeerArchivo(resumen, autores, choice);
        }
    }//GEN-LAST:event_cargarResBtnActionPerformed

    private void analizarResBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizarResBtnActionPerformed
        if (palabrasClave.isEmpty()){
            JOptionPane.showMessageDialog(this, "No se ha agregado ninguna palabra clave.\nPor favor, registre al menos una antes de continuar", "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
        else if(resumen.isEmpty()){
            JOptionPane.showMessageDialog(this, "No se ha agregado ningun resumen.\nPor favor, registre al menos uno antes de continuar", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        else{
            //Escribo todos los resumenes en el un arreglo para mostrarlo
            //en un menu desplegable
            String[] documentos = resumen.displayDocs();
            String resumenSel = (String) JOptionPane.showInputDialog(null, "Seleccione el resumen que desea analizar", "Analizar Resumen",
                    JOptionPane.QUESTION_MESSAGE, null, documentos, documentos[0]);
            
            if(resumenSel == null){
                
            }
            else{
                Documento temp = resumen.BuscarDocTitulo(resumenSel).getDoc();
//                temp.Analizar(palabrasClave);
                temp.analizarResumen(palabrasClave);
            }
        }
    }//GEN-LAST:event_analizarResBtnActionPerformed

    private void buscarInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarInBtnActionPerformed
        //Verifico si existe al menos una palabra clave
        if (palabrasClave.isEmpty()){
            JOptionPane.showMessageDialog(this, "No se ha agregado ninguna palabra clave.\nPor favor, registre al menos una antes de continuar", "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
        else if(resumen.isEmpty()){
            JOptionPane.showMessageDialog(this, "No se ha agregado ningun resumen.\nPor favor, registre al menos uno antes de continuar", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        else{
            //Escribo todas las palabras clave en un arreglo para mostrarlo en un
            //menu desplegable
//            String[] palabras = keyWords.displayKeywords(keyWords);
            String[] palabras = palabrasClave.displayKeywords();
            String palabrasMenu = (String) JOptionPane.showInputDialog(null, "Seleccione la palabra clave que desea buscar", "Buscar Investigaciones", 
                    JOptionPane.QUESTION_MESSAGE, null, palabras, palabras[0]);
            
            //Si selecciono cancelar
            if (palabrasMenu == null){

            }
            else{
                txtArea.setText("");
                palabrasClave.buscarInvestigacion(palabrasMenu, resumen, txtArea);
                //Creo un arreglo en el cual guardare el titulo de las investigaciones en las que
                //se encuentra la palabra clave
//                ArrayList<String> ans = resumen.buscarInv(palabrasMenu, resumen);
//                
//                //Si no consigo ninguna investigacion en la cual aparezca la palabra clave
//                if(ans.size() == 0){
//                    JOptionPane.showMessageDialog(this, "No se encontro ninguna investigacion en la que aparezca la palabra " + palabrasMenu, "Buscar Investigaciones", JOptionPane.INFORMATION_MESSAGE);
//                    txtArea.setText("");
//                }
//                else{
//                    txtArea.setText("");
//                    String resp = "A continuacion se muestran las investigaciones en las cuales\naparece la palabra " + palabrasMenu +"\n";
//                    for (int i = 0; i < ans.size(); i++) {
//                        resp = resp + ans.get(i) + "\n";
//                    }
//                    txtArea.setText(resp);
//                }
                
            }
        }
    }//GEN-LAST:event_buscarInBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analizarResBtn;
    private javax.swing.JButton buscarInBtn;
    private javax.swing.JButton cargarPBtn;
    private javax.swing.JButton cargarResBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private javax.swing.JTextArea palabrasTxt;
    private javax.swing.JTextArea resumenesTxt;
    private javax.swing.JButton salirBtn;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
